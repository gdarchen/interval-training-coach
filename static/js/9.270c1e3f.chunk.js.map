{"version":3,"sources":["utils/durationUtils.js","common/intervals-list/IntervalListItem.jsx","common/intervals-list/IntervalOccurence.jsx","common/intervals-list/IntervalList.jsx","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/bytesToUuid.js","../node_modules/uuid/dist/esm-browser/v4.js","pages/training-creation/TrainingCreation.jsx","pages/training-edition/TrainingEdition.jsx","utils/textToSpeechUtils.js"],"names":["formatDuration","duration","hours","minutes","seconds","addZeroIfNeeded","timeUnit","useStyles","makeStyles","root","minWidth","deleteIntervalButton","marginLeft","connect","dispatch","deleteInterval","intervalId","deleteIntervalAction","formattedDuration","description","isEditMode","classes","Card","className","CardContent","Typography","variant","component","CardActions","disableSpacing","Tooltip","title","arrow","IconButton","aria-label","color","size","onClick","e","stopPropagation","onDeleteClick","content","padding","height","display","alignItems","justifyContent","occurences","IntervalOccurences","intervalListContainer","flexDirection","period","list","paddingTop","paddedListItem","marginBottom","listItem","interval","cursor","occurencesListItem","paddingBottom","saveIntervalToEdit","saveIntervalToEditAction","saveTrainingInCreation","training","saveTrainingInCreationAction","DragHandle","SortableHandle","Period","index","key","JSON","stringify","group","List","ListItem","classNames","map","speak","formatIntervalToSpeechText","id","IntervalOccurence","SortablePeriod","SortableElement","IntervalList","periods","PeriodToRender","SortableIntervalList","SortableContainer","onSortEnd","oldIndex","newIndex","reorderedTraining","arrayMove","console","log","useDragHandle","Button","React","props","ref","children","_props$color","_props$component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","startIconProp","startIcon","_props$type","type","_props$variant","other","_objectWithoutProperties","clsx","concat","capitalize","ButtonBase","_extends","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","borderRadius","shape","palette","text","primary","transition","transitions","create","short","textDecoration","backgroundColor","fade","action","hoverOpacity","width","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","Error","byteToHex","i","toString","substr","bytesToUuid","buf","offset","bth","join","v4","options","Array","rnds","random","ii","marginTop","trainingTitle","light","addIntervalButton","validateButton","position","bottom","spacing","intervalCreatorContainer","maxHeight","overflow","state","trainingInCreation","trainingReducer","saveTraining","saveTrainingAction","saveSelectedTraining","saveSelectedTrainingAction","updateTraining","updateTrainingAction","trainingToEdit","isEditionMode","useState","wasSaveClicked","setWasSaveClicked","history","useHistory","useEffect","isTrainingNameInError","hasEmptyPeriods","some","p","TextField","value","helperText","onChange","target","error","newInterval","uuidv4","push","TrainingEdition","location","useLocation","message","msg","SpeechSynthesisUtterance","volume","voice","speechSynthesis","getVoices","filter"],"mappings":"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","file":"static/js/9.270c1e3f.chunk.js","sourcesContent":["function formatDuration(duration) {\n  const { hours, minutes, seconds } = duration;\n\n  if (seconds !== 0) {\n    return `${hours}h ${addZeroIfNeeded(minutes)}m ${addZeroIfNeeded(\n      seconds\n    )}s`;\n  }\n\n  return `${hours}h${addZeroIfNeeded(minutes)}`;\n}\n\nfunction addZeroIfNeeded(timeUnit) {\n  return timeUnit < 10 ? `0${timeUnit}` : `${timeUnit}`;\n}\n\nexport { formatDuration };\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { deleteIntervalAction } from \"../../redux/actions/trainingActions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 400\n  },\n  deleteIntervalButton: {\n    marginLeft: \"auto\"\n  }\n});\n\nconst IntervalListItem = ({\n  intervalId,\n  formattedDuration,\n  description,\n  isEditMode,\n  deleteInterval\n}) => {\n  const classes = useStyles();\n\n  const onDeleteClick = e => {\n    e.stopPropagation();\n    deleteInterval(intervalId);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h6\" component=\"h2\">\n          {description}\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {formattedDuration}\n        </Typography>\n      </CardContent>\n\n      {isEditMode && (\n        <CardActions disableSpacing>\n          <Tooltip title=\"Edit interval\" arrow>\n            <IconButton\n              aria-label=\"edit interval\"\n              color=\"secondary\"\n              size=\"small\"\n            >\n              <EditIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Delete interval\" arrow>\n            <IconButton\n              aria-label=\"delete interval\"\n              color=\"secondary\"\n              size=\"small\"\n              className={classes.deleteIntervalButton}\n              onClick={e => onDeleteClick(e)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </CardActions>\n      )}\n    </Card>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  deleteInterval: intervalId => dispatch(deleteIntervalAction(intervalId))\n});\n\nexport default connect(null, mapDispatchToProps)(IntervalListItem);\n","import Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 100\n  },\n  content: {\n    padding: \"unset !important\",\n    height: 45,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  occurences: {\n    marginLeft: 10,\n    color: \"red\"\n  }\n});\n\nconst IntervalOccurences = ({ occurences }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <Typography variant=\"subtitle1\" component=\"p\">\n          Répéter\n          <span className={classes.occurences}>&#10005; {occurences}</span>\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default IntervalOccurences;\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport arrayMove from \"array-move\";\nimport ReorderIcon from \"@material-ui/icons/Reorder\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n} from \"react-sortable-hoc\";\nimport {\n  saveIntervalToEditAction,\n  saveTrainingInCreationAction,\n} from \"../../redux/actions/trainingActions\";\nimport { formatDuration } from \"../../utils/durationUtils\";\nimport {\n  formatIntervalToSpeechText,\n  speak,\n} from \"../../utils/textToSpeechUtils\";\nimport IntervalListItem from \"./IntervalListItem\";\nimport IntervalOccurences from \"./IntervalOccurence\";\n\nconst useStyles = makeStyles({\n  intervalListContainer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n  },\n  period: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    color: \"white\",\n  },\n  list: {\n    paddingTop: \"20px\",\n  },\n  paddedListItem: {\n    \"& > *:not(:last-child)\": {\n      marginBottom: \"2px\",\n    },\n  },\n  listItem: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  interval: {\n    cursor: \"pointer\",\n  },\n  occurencesListItem: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n});\n\nconst IntervalList = ({\n  training,\n  isEditMode,\n  saveIntervalToEdit,\n  saveTrainingInCreation,\n}) => {\n  const classes = useStyles();\n\n  if (!training) {\n    return null;\n  }\n\n  const DragHandle = SortableHandle(() => <ReorderIcon />);\n\n  const Period = ({ period, index }) => (\n    <div\n      key={`${index}-${JSON.stringify(period.group)}-${JSON.stringify(\n        period.occurences\n      )}`}\n      className={classes.period}\n    >\n      {isEditMode && <DragHandle />}\n      <List className={classes.list}>\n        <ListItem\n          className={classNames(classes.listItem, classes.paddedListItem)}\n        >\n          {period.group &&\n            period.group.map((interval, index) => {\n              return (\n                <div\n                  className={classes.interval}\n                  onClick={() =>\n                    isEditMode\n                      ? saveIntervalToEdit(interval)\n                      : speak(formatIntervalToSpeechText(interval))\n                  }\n                  key={`${index}-${JSON.stringify(interval)}-${JSON.stringify(\n                    interval.occurences\n                  )}`}\n                >\n                  <IntervalListItem\n                    intervalId={interval.id}\n                    formattedDuration={\n                      interval.duration\n                        ? formatDuration(interval.duration)\n                        : null\n                    }\n                    description={interval.description}\n                    isEditMode={isEditMode}\n                  />\n                </div>\n              );\n            })}\n        </ListItem>\n        {period.occurences > 1 && (\n          <ListItem\n            className={classNames(classes.listItem, classes.occurencesListItem)}\n          >\n            <IntervalOccurences occurences={period.occurences} />\n          </ListItem>\n        )}\n      </List>\n    </div>\n  );\n\n  const SortablePeriod = SortableElement(Period);\n\n  const IntervalList = () => (\n    <div>\n      {training &&\n        training.periods &&\n        training.periods.map((period, index) => {\n          const PeriodToRender = isEditMode ? SortablePeriod : Period;\n          return (\n            <PeriodToRender\n              key={`sortable-item-${index}-${JSON.stringify(\n                period.group\n              )}-${JSON.stringify(period.occurences)}`}\n              period={period}\n              index={index}\n            />\n          );\n        })}\n    </div>\n  );\n\n  const SortableIntervalList = SortableContainer(IntervalList);\n\n  const reorderPeriods = ({ oldIndex, newIndex }) => {\n    const reorderedTraining = arrayMove(training.periods, oldIndex, newIndex);\n    saveTrainingInCreation({ ...training, periods: reorderedTraining });\n    console.log(oldIndex, newIndex);\n  };\n\n  return (\n    <div className={classes.intervalListContainer}>\n      {isEditMode ? (\n        <SortableIntervalList onSortEnd={reorderPeriods} useDragHandle />\n      ) : (\n        <IntervalList />\n      )}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveIntervalToEdit: (interval) =>\n    dispatch(saveIntervalToEditAction(interval)),\n  saveTrainingInCreation: (training) =>\n    dispatch(saveTrainingInCreationAction(training)),\n});\n\nexport default connect(null, mapDispatchToProps)(IntervalList);\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto != 'undefined' && typeof msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex; // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\n  return [bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], '-', bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]], bth[buf[i++]]].join('');\n}\n\nexport default bytesToUuid;","import rng from './rng.js';\nimport bytesToUuid from './bytesToUuid.js';\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof options == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nexport default v4;","import Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport IntervalList from \"../../common/intervals-list/IntervalList\";\nimport {\n  saveTrainingAction,\n  saveTrainingInCreationAction,\n  updateTrainingAction,\n  saveSelectedTrainingAction,\n} from \"../../redux/actions/trainingActions\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: 20,\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  trainingTitle: {\n    marginBottom: 10,\n    \"& label\": {\n      color: theme.palette.secondary.light,\n    },\n    \"& .MuiOutlinedInput-root:not(.Mui-focused):not(.Mui-error) .MuiOutlinedInput-notchedOutline, & .MuiInoutBase-root:hover\": {\n      borderColor: theme.palette.secondary.light,\n    },\n    \"& input\": {\n      color: theme.palette.primary.main,\n    },\n  },\n  addIntervalButton: {\n    marginTop: 20,\n  },\n  validateButton: {\n    position: \"absolute\",\n    bottom: theme.spacing(2),\n  },\n  intervalCreatorContainer: {\n    maxHeight: \"75%\",\n    overflow: \"auto\",\n  },\n}));\n\nconst TrainingCreation = ({\n  trainingInCreation,\n  saveTrainingInCreation,\n  saveTraining,\n  updateTraining,\n  saveSelectedTraining,\n  trainingToEdit = null,\n  isEditionMode = false,\n}) => {\n  const classes = useStyles();\n\n  const [wasSaveClicked, setWasSaveClicked] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    saveTrainingInCreation(trainingToEdit);\n  }, [trainingToEdit, saveTrainingInCreation]);\n\n  const onSaveButtonClick = () => {\n    setWasSaveClicked(true);\n    if (trainingInCreation) {\n      // Creation mode\n      if (!isEditionMode) {\n        saveTraining(trainingInCreation);\n      } else if (trainingToEdit) {\n        // Edit mode\n        updateTraining(trainingToEdit.id, trainingInCreation);\n        saveSelectedTraining(trainingInCreation);\n        history.push(\"/\");\n      }\n    }\n  };\n\n  const onEditTrainingName = (e) => {\n    setWasSaveClicked(false);\n    saveTrainingInCreation({\n      name: e.target.value,\n      periods:\n        trainingInCreation && trainingInCreation.periods\n          ? [...trainingInCreation.periods]\n          : [],\n    });\n  };\n\n  const onAddIntervalClick = () => {\n    const newInterval = {\n      id: uuidv4(),\n      group: [\n        {\n          id: uuidv4(),\n          duration: null,\n          description: null,\n        },\n      ],\n      occurences: 1,\n    };\n    saveTrainingInCreation({\n      ...trainingInCreation,\n      periods:\n        trainingInCreation && trainingInCreation.periods\n          ? [...trainingInCreation.periods, newInterval]\n          : [newInterval],\n    });\n  };\n\n  const isTrainingNameInError =\n    wasSaveClicked && !(trainingInCreation && trainingInCreation.name);\n\n  const hasEmptyPeriods =\n    trainingInCreation &&\n    trainingInCreation.periods &&\n    trainingInCreation.periods.some((p) => {\n      return p.group.some(\n        (interval) =>\n          interval.duration === null || interval.description === null\n      );\n    });\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Training name\"\n        variant=\"outlined\"\n        className={classes.trainingTitle}\n        value={(trainingInCreation && trainingInCreation.name) || \"\"}\n        helperText={isTrainingNameInError ? \"Cannot be empty.\" : null}\n        onChange={onEditTrainingName}\n        error={isTrainingNameInError}\n      />\n\n      <div className={classes.intervalCreatorContainer}>\n        <IntervalList isEditMode training={trainingInCreation} />\n      </div>\n\n      <Button\n        color=\"primary\"\n        className={classes.addIntervalButton}\n        onClick={onAddIntervalClick}\n      >\n        Add an interval\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        className={classes.validateButton}\n        onClick={onSaveButtonClick}\n        disabled={!trainingInCreation || hasEmptyPeriods}\n      >\n        {isEditionMode ? \"Update\" : \"Save\"}\n      </Button>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  trainingInCreation: state.trainingReducer.trainingInCreation,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  saveTrainingInCreation: (training) =>\n    dispatch(saveTrainingInCreationAction(training)),\n  saveTraining: (training) => dispatch(saveTrainingAction(training)),\n  saveSelectedTraining: (training) =>\n    dispatch(saveSelectedTrainingAction(training)),\n  updateTraining: (id, training) =>\n    dispatch(updateTrainingAction(id, training)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TrainingCreation);\n","import React from \"react\";\nimport TrainingCreation from \"../training-creation/TrainingCreation\";\nimport { useLocation } from \"react-router-dom\";\n\nconst TrainingEdition = () => {\n  const location = useLocation();\n  const { trainingToEdit } = location && location.state;\n\n  return <TrainingCreation trainingToEdit={trainingToEdit} isEditionMode />;\n};\n\nexport default TrainingEdition;\n","const speak = message => {\n  const msg = new SpeechSynthesisUtterance();\n  msg.text = message;\n  msg.volume = 1;\n  msg.voice = speechSynthesis\n    .getVoices()\n    .filter(voice => voice.name === \"Thomas\")[0];\n  speechSynthesis.speak(msg);\n};\n\nconst formatIntervalToSpeechText = interval => {\n  const { hours, minutes, seconds } = interval.duration;\n\n  if (hours > 0) {\n    if (seconds !== 0) {\n      return `${interval.description} pendant ${hours} heures ${minutes} minutes et ${seconds} secondes`;\n    }\n    return `${interval.description} pendant ${hours} heures et ${minutes} minutes`;\n  }\n\n  return `${interval.description} pendant ${minutes} minutes`;\n};\n\nexport { speak, formatIntervalToSpeechText };\n"],"sourceRoot":""}
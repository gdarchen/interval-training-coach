{"version":3,"sources":["redux/actions/trainingActions.js","App.js","utils/intervalUtils.js","redux/reducers/trainingReducer.js","serviceWorker.js","index.js","core/localStorage.js"],"names":["saveTrainingAction","training","dispatch","type","updateTrainingAction","id","saveSelectedTrainingAction","saveIntervalToEditAction","interval","deleteIntervalAction","intervalId","saveTrainingInCreationAction","deleteTrainingAction","trainingId","AppShell","React","lazy","Credits","Home","TrainingCreation","TrainingEdition","IntervalEditionModal","useStyles","makeStyles","theme","offset","mixins","toolbar","connect","state","intervalToEdit","trainingReducer","saveIntervalToEdit","classes","basename","fallback","className","classNames","isModalOpened","handleCloseModal","exact","path","deleteIntervalOrPeriod","trainings","newTrainings","group","jp","parent","nodes","pop","period","value","length","newPeriods","filter","p","periods","newGroup","apply","deleteTrainingById","trainingToDeleteId","action","selectedTraining","trainingInCreation","updatedTrainingsAfterTrainingDeletion","console","log","updatedTrainingsAfterIntervalDeletion","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","initialState","name","duration","hours","minutes","seconds","description","occurences","reducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","throttle","stringify","setItem","saveState","getState","createMuiTheme","palette","primary","yellow","secondary","orange","ternary","ReactDOM","render","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.435dbc87.chunk.js","sourcesContent":["function saveTrainingAction(training) {\n  return dispatch => {\n    dispatch({\n      type: \"SAVE_TRAINING\",\n      training\n    });\n  };\n}\n\nfunction updateTrainingAction(id, training) {\n  return dispatch => {\n    dispatch({\n      type: \"UPDATE_TRAINING\",\n      id,\n      training\n    });\n  };\n}\n\nfunction saveSelectedTrainingAction(training) {\n  return dispatch => {\n    dispatch({\n      type: \"SAVE_SELECTED_TRAINING\",\n      training\n    });\n  };\n}\n\nfunction saveIntervalToEditAction(interval) {\n  return dispatch => {\n    dispatch({\n      type: \"SAVE_INTERVAL_TO_EDIT\",\n      interval\n    });\n  };\n}\n\nfunction deleteIntervalAction(intervalId) {\n  return dispatch => {\n    dispatch({\n      type: \"DELETE_INTERVAL\",\n      intervalId\n    });\n  };\n}\n\nfunction saveTrainingInCreationAction(training) {\n  return dispatch => {\n    dispatch({\n      type: \"SAVE_TRAINING_IN_CREATION\",\n      training\n    });\n  };\n}\n\nfunction deleteTrainingAction(trainingId) {\n  return dispatch => {\n    dispatch({\n      type: \"DELETE_TRAINING\",\n      trainingId\n    });\n  };\n}\n\nexport {\n  saveTrainingAction,\n  updateTrainingAction,\n  saveSelectedTrainingAction,\n  deleteIntervalAction,\n  saveIntervalToEditAction,\n  saveTrainingInCreationAction,\n  deleteTrainingAction\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport React, { Suspense } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport { saveIntervalToEditAction } from \"./redux/actions/trainingActions\";\n\nconst AppShell = React.lazy(() => import(\"./common/app-shell/AppShell\"));\nconst Credits = React.lazy(() => import(\"./common/credits/Credits\"));\nconst Home = React.lazy(() => import(\"./pages/home/Home\"));\nconst TrainingCreation = React.lazy(() =>\n  import(\"./pages/training-creation/TrainingCreation\")\n);\nconst TrainingEdition = React.lazy(() =>\n  import(\"./pages/training-edition/TrainingEdition\")\n);\nconst IntervalEditionModal = React.lazy(() =>\n  import(\"./common/interval-edition-modal/IntervalEditionModal\")\n);\n\nconst useStyles = makeStyles(theme => ({\n  offset: theme.mixins.toolbar,\n}));\n\nconst App = ({ saveIntervalToEdit, intervalToEdit }) => {\n  const classes = useStyles();\n\n  const handleCloseModal = () => {\n    saveIntervalToEdit(null);\n  };\n\n  // saveTraining({ teeeest: \"tttttt\" });\n  return (\n    <Router basename=\"/interval-training-coach\">\n      <Suspense fallback={<div>Loading...</div>}>\n        <AppShell />\n\n        <div className={classNames(classes.offset, \"App\")}>\n          <IntervalEditionModal\n            isModalOpened={!!intervalToEdit}\n            handleCloseModal={handleCloseModal}\n          />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/credits\">\n              <Credits />\n            </Route>\n            <Route path=\"/training-creation\">\n              <TrainingCreation />\n            </Route>\n            <Route path=\"/training-edition\">\n              <TrainingEdition />\n            </Route>\n          </Switch>\n        </div>\n      </Suspense>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => ({\n  intervalToEdit: state.trainingReducer.intervalToEdit\n});\n\nconst mapDispatchToProps = dispatch => ({\n  saveIntervalToEdit: interval => dispatch(saveIntervalToEditAction(interval))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import jp from \"jsonpath\";\n\nexport const deleteIntervalOrPeriod = (intervalId, trainings) => {\n  const newTrainings = trainings;\n\n  // Group containing the interval to remove\n  const group = jp.parent(newTrainings, `$..group[?(@.id == '${intervalId}')]`);\n\n  // Get the node to the interval\n  const nodes = jp.nodes(\n    newTrainings,\n    `$..group[?(@.id == '${intervalId}')]`\n  )[0].path;\n  // Pop the node path twice to mount up to the period containing the interval\n  nodes.pop(); // interval index\n  nodes.pop(); // group field\n  // Get the period containing the interval\n  const period = jp.value(trainings, nodes);\n\n  // If this interval is the only one in the group, we remove the whole group\n  if (group && group.length === 1) {\n    // Pop the node once more to mount up to the periods array\n    nodes.pop();\n    // Get the periods array\n    const periods = jp.value(trainings, nodes);\n    // Remove the whole period\n    const newPeriods = periods.filter(p => p.id !== period.id);\n\n    // Replace the periods array with the new one (removing the one containing the interval)\n    newTrainings.periods = [...newPeriods];\n  } else {\n    // Delete only the interval\n    // Remove the interval from the group\n    const newGroup = group.filter(interval => interval.id !== intervalId);\n\n    // Replace the period to replace its group (and therefore remove the interval)\n    jp.apply(newTrainings, `$..periods[?(@.id == '${period.id}')]`, value => ({\n      ...value,\n      group: [...newGroup]\n    }));\n  }\n\n  return newTrainings;\n};\n\nexport const deleteTrainingById = (trainings, trainingToDeleteId) => {\n  return trainings.filter(training => training.id !== trainingToDeleteId);\n};\n","import jp from \"jsonpath\";\nimport {\n  deleteIntervalOrPeriod,\n  deleteTrainingById\n} from \"../../utils/intervalUtils\";\n\nconst trainingReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SAVE_TRAINING\":\n      return { ...state, trainings: [...state.trainings, action.training] };\n    case \"UPDATE_TRAINING\":\n      const newTrainings = state.trainings;\n      jp.apply(newTrainings, `$[?(@.id == '${action.id}')]`, value => ({\n        id: action.id,\n        ...action.training\n      }));\n      return { ...state, trainings: [...newTrainings] };\n    case \"SAVE_SELECTED_TRAINING\":\n      return { ...state, selectedTraining: action.training };\n    case \"SAVE_INTERVAL_TO_EDIT\":\n      return { ...state, intervalToEdit: action.interval };\n    case \"SAVE_TRAINING_IN_CREATION\":\n      return { ...state, trainingInCreation: action.training };\n    case \"DELETE_TRAINING\":\n      const updatedTrainingsAfterTrainingDeletion = deleteTrainingById(\n        state.trainings,\n        action.trainingId\n      );\n      console.log(updatedTrainingsAfterTrainingDeletion);\n      return {\n        ...state,\n        trainings: [...updatedTrainingsAfterTrainingDeletion]\n      };\n    case \"DELETE_INTERVAL\":\n      const updatedTrainingsAfterIntervalDeletion = deleteIntervalOrPeriod(\n        action.intervalId,\n        state.trainingInCreation\n      );\n      return {\n        ...state,\n        trainingInCreation: { ...updatedTrainingsAfterIntervalDeletion }\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trainingReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { orange, yellow } from \"@material-ui/core/colors\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport throttle from \"lodash/throttle\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport { loadState, saveState } from \"./core/localStorage\";\nimport \"./index.css\";\nimport trainingReducer from \"./redux/reducers/trainingReducer\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Load the persisted state from the previous session\nconst persistedState = loadState();\n// Build the initial Redux state\nconst initialState = {\n  ...persistedState,\n  ...(!(\n    persistedState &&\n    persistedState.trainingReducer &&\n    persistedState.trainingReducer.trainings.length\n  )\n    ? {\n        trainingReducer: {\n          trainings: [\n            {\n              id: \"f541eb16-aaca-49c7-ab88-549252bce27c\",\n              name: \"Entrainement test 1\",\n              periods: [\n                {\n                  id: \"6f835219-8a96-4ad6-8f80-56084631c553\",\n                  group: [\n                    {\n                      id: \"bf47545a-15fa-4b7d-9e49-3dbb90349ea9\",\n                      duration: { hours: 0, minutes: 20, seconds: 0 },\n                      description: \"Endurance fondamentale\"\n                    }\n                  ],\n                  occurences: 1\n                },\n                {\n                  id: \"65c62e09-532c-4427-84fa-70d39228653a\",\n                  group: [\n                    {\n                      id: \"41f2e79e-bb45-43f3-8a4a-c3932fbf5e5a\",\n                      duration: { hours: 0, minutes: 30, seconds: 0 },\n                      description: \"Allure semi-marathon\"\n                    },\n                    {\n                      id: \"8a0175a2-fdcd-4fe7-b8dd-bc7b724305e4\",\n                      duration: { hours: 0, minutes: 2, seconds: 0 },\n                      description: \"Endurance fondamentale\"\n                    }\n                  ],\n                  occurences: 2\n                }\n              ]\n            }\n          ]\n        }\n      }\n    : [])\n};\n\n// Load the Redux reducers and combine them\nconst reducer = combineReducers({ trainingReducer });\n\n// Create the Redux store relying on the previously built reducers and initialState\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// Each second, we save the current state of the application so as to be able to restore it in a next session\nstore.subscribe(\n  throttle(() => {\n    saveState({\n      trainingReducer: {\n        trainings: store.getState().trainingReducer.trainings\n      }\n    });\n  }, 1000)\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: yellow,\n    secondary: orange,\n    ternary: \"#FFFFFF\"\n  }\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state-itc\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(\"state-itc\", serializedState);\n  } catch (err) {\n    // Ignore write errors\n  }\n};\n"],"sourceRoot":""}